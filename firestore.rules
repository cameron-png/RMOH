rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the user is authenticated and if their user document has isAdmin set to true.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /users/{userId} {
      // Anyone can read a user's public profile (needed for visitor page)
      allow get: if true;
      // Only the owner or an admin can list/write to their own profile
      allow list, write: if isOwner(userId) || isAdmin();
    }

    match /openHouses/{houseId} {
      // Anyone can query the open houses collection to find the active one.
      // This is the key rule to fix the visitor page.
      allow list: if true;
      // Anyone can read a single open house document (needed for visitor page)
      allow get: if true;
      // Only the owner or an admin can write to an open house document.
      allow write: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /feedbackForms/{formId} {
        // Anyone can read a specific feedback form
        allow get: if true;
        // Admins and owners can manage forms
        allow list, write: if request.auth != null;
    }

    match /leads/{leadId} {
      // Anyone can create a lead
      allow create: if true;
      // Only the owner of the lead or an admin can read/update it
      allow read, update, delete: if (request.auth != null && isOwner(resource.data.userId)) || isAdmin();
    }

    match /feedbackSubmissions/{submissionId} {
        // Anyone can create a feedback submission
        allow create: if true;
        // Only the owner or an admin can read it
        allow read: if (request.auth != null && isOwner(resource.data.userId)) || isAdmin();
    }
    
    match /gifts/{giftId} {
        // Anyone can create a gift (it will be in 'pending' state)
        allow create: if true;
        // Only the owner or an admin can manage gifts
        allow read, write, list: if (request.auth != null && isOwner(resource.data.userId)) || isAdmin();
    }

    match /settings/{docId} {
      // Admins can change settings, authenticated users can read them
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}