rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Allow user to read/update their own profile
      // Allow anyone to read a user's public profile data (needed for visitor page)
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      // Deleting users should be done from the Firebase console or a secure admin function
      allow delete: if false; 
    }

    // OpenHouses collection
    match /openHouses/{houseId} {
      // Allow owner to manage their own open house
      // Allow anyone to read an active open house for the visitor page
      allow read: if true;
      allow create, update, delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // FeedbackForms collection
    match /feedbackForms/{formId} {
        // Anyone can read global forms
        // Owners can manage their custom forms
        allow read: if true;
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid; // Must be custom
        allow update, delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Settings collection
    match /settings/{docId} {
        // Only authenticated users can read settings, only admins can write
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    // Leads collection
    match /leads/{leadId} {
        // Anyone can create a lead (from visitor page)
        // Only owner/admin can read/update/delete
        allow create: if true;
        allow read, update, delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // FeedbackSubmissions collection
    match /feedbackSubmissions/{submissionId} {
        // Anyone can create a submission (from visitor page)
        // Only owner/admin can read/delete
        allow create: if true;
        allow read, delete: if isOwner(resource.data.userId) || isAdmin();
        allow update: if false; // Submissions should be immutable
    }

    // Gifts collection
    match /gifts/{giftId} {
        // Only owners/admins can manage gifts
        allow create, read, update, delete: if isOwner(resource.data.userId) || isAdmin();
    }
  }
}
