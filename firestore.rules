
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own profile
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // OpenHouses can be read by anyone, but only created, updated, or deleted by the owner
    match /openHouses/{houseId} {
        allow get: if true;
        allow list, create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /feedbackForms/{formId} {
        // Allow authenticated users to read global forms
        allow get: if request.auth != null && resource.data.type == 'global';
        // Allow users to list their own custom forms, and all global forms
        allow list: if request.auth != null;
        // Allow users to CRUD their own custom forms
        allow read, create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /feedbackSubmissions/{submissionId} {
        // Allow creation by anyone (visitors)
        allow create: if true;
        // Only the user who owns the open house can read/update/delete submissions
        allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/openHouses/$(request.resource.data.openHouseId)).data.userId == request.auth.uid;
    }

    match /leads/{leadId} {
        allow create: if true;
        allow read, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Gifts can only be managed by the user who created them
    match /gifts/{giftId} {
        allow read, create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Settings are only writable only by admins, but appDefaults are readable by any authenticated user
    match /settings/{docId} {
        allow get: if request.auth != null && docId == 'appDefaults';
        allow list, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
