
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own profile, admins can read any profile.
    // Public visitor page needs to read any user profile.
    // All users can create their own profile during signup.
    match /users/{userId} {
      allow read: if true; 
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Public visitor page needs to query open houses to find the active one.
    // Authenticated users can read their own open houses.
    // Admins can read all open houses.
    match /openHouses/{houseId} {
      allow read, list: if true;
      allow write: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Visitor page needs to read the assigned feedback form.
    // Authenticated users can read all global and their own custom forms.
    // Admins can read all forms.
    match /feedbackForms/{formId} {
      allow read: if true;
      allow write: if isAdmin(); // Only admins can create/edit global forms
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid; // Users can create custom forms
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid; // Users can manage their own custom forms
    }
    
    // Leads can be created by anyone on the public form.
    // Only the owner of the lead or an admin can read/write it.
    match /leads/{leadId} {
      allow create: if true;
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Feedback can be created by anyone.
    // Only the owner or an admin can read it.
    match /feedbackSubmissions/{submissionId} {
        allow create: if true;
        allow read: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Gifts can be created by anyone (for the auto-gift flow).
    // Only the owner or admin can manage them.
    match /gifts/{giftId} {
      allow create: if true;
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Transactions can only be read by their owner or an admin.
    // Transactions are only created via server-side logic (Admin SDK).
    match /transactions/{transactionId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow write: if false; // Prevent client-side writes
    }
    
    // App settings can be read by anyone (for gift brands).
    // Only admins can write to settings.
    match /settings/appDefaults {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
