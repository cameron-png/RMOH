
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read/write their own profile
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Settings can be read by any authenticated user
    match /settings/appDefaults {
        allow get: if request.auth != null;
    }
    
    // Admins can write to settings
    match /settings/appDefaults {
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Open Houses can be read/written by their owner
    match /openHouses/{houseId} {
        allow read, write: if isOwner(resource.data.userId);
    }
    
    // Leads can be read/written by their owner
    // Anyone can create a lead (from the public visitor page)
    match /leads/{leadId} {
        allow create: if true;
        allow read, update, delete: if isOwner(resource.data.userId);
    }
    
    // Feedback submissions can be read/written by their owner
    // Anyone can create a submission (from the public visitor page)
    match /feedbackSubmissions/{submissionId} {
        allow create: if true;
        allow read, update, delete: if isOwner(resource.data.userId);
    }
    
    // Feedback forms can be read by any authenticated user
    // Custom forms can be created/written by their owner
    match /feedbackForms/{formId} {
        allow get: if request.auth != null;
        allow list: if request.auth != null; // Allow listing for all authenticated users
        allow create, update, delete: if isOwner(request.resource.data.userId);
    }

    // Gifts can be read/written by their owner
    match /gifts/{giftId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update, delete: if isOwner(resource.data.userId);
    }
  }
}
