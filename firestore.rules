rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules more readable.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the authenticated user has the 'isAdmin' flag in their user document.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Default deny all access to prevent unintentional data exposure.
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'users' collection.
    match /users/{userId} {
      // Admins can read and write to any user profile.
      allow read, write: if isAdmin();
      // Authenticated users can read and write to their own profile.
      allow read, write: if isOwner(userId);
      // Public visitors (unauthenticated) can read a user's profile to display agent info on the visitor page.
      allow get: if request.auth == null;
    }

    // Rules for the 'settings' collection.
    match /settings/appDefaults {
       // Admins can read and write application settings.
       allow read, write: if isAdmin();
       // Authenticated users can read the settings (e.g., for enabled gift brands).
       allow get: if request.auth != null;
    }

    // Rules for the 'openHouses' collection.
    match /openHouses/{houseId} {
      // Admins can read and write any open house.
      allow read, write: if isAdmin();
      // Owners can perform any action on their own open houses.
      allow read, write: if isOwner(resource.data.userId);
      // Public visitors can only read a single open house document if it is marked as active.
      // This is crucial for the public QR code page to function.
      allow get: if request.auth == null && resource.data.isActive == true;
    }

    // Rules for the 'feedbackForms' collection.
    match /feedbackForms/{formId} {
        // Admins can manage all forms.
        allow read, write: if isAdmin();
        // Any authenticated user can read global form templates.
        allow get: if request.auth != null && resource.data.type == 'global';
        // Users can manage their own custom forms.
        allow read, write: if resource.data.type == 'custom' && isOwner(resource.data.userId);
        // Public visitors can read the specific form needed for an active open house.
        allow get: if request.auth == null;
    }
    
    // Rules for 'feedbackSubmissions'
    match /feedbackSubmissions/{submissionId} {
      // Admins can read and write any submission.
      allow read, write: if isAdmin();
      // Owners can read submissions linked to their user ID.
      allow read: if isOwner(resource.data.userId);
      // Public visitors can ONLY create new submissions. They cannot read or modify any.
      allow create: if request.auth == null;
    }

    // Rules for 'leads'
    match /leads/{leadId} {
      // Admins can read and write any lead.
      allow read, write: if isAdmin();
      // Owners can manage leads linked to their user ID.
      allow read, write: if isOwner(resource.data.userId);
       // Public visitors can ONLY create new leads. They cannot read or modify any.
      allow create: if request.auth == null;
    }
    
    // Rules for 'gifts'
    match /gifts/{giftId} {
      // Admins can manage all gifts.
      allow read, write: if isAdmin();
      // Owners can create and manage their own gifts.
      allow read, create, update: if isOwner(resource.data.userId);
    }
  }
}
