rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read/write any user profile
      // Users can read and update their OWN profile
      allow read, update: if isAdmin() || request.auth.uid == userId;
      // Allow user creation during sign-up
      allow create: if request.auth != null;
    }
    
    // Rules for global settings
    match /settings/appDefaults {
        // Admins can change settings
        allow write: if isAdmin();
        // Any authenticated user can read the settings (needed for gift brands, etc.)
        allow read: if request.auth != null;
    }

    // Rules for user-generated content
    match /openHouses/{houseId} {
      // Admins can manage any open house
      // Users can manage their own open houses
      allow read, create, update, delete: if isAdmin() || request.auth.uid == resource.data.userId;
      
      // Public visitor page needs to read the active open house
      allow read: if request.auth == null;
    }

    match /feedbackForms/{formId} {
      // Admins can manage all forms
      allow read, write: if isAdmin();
      
      // Users can manage their own custom forms
      allow read, create, update, delete: if request.auth.uid == resource.data.userId && resource.data.type == 'custom';
      
      // All authenticated users can read global forms
      allow read: if request.auth != null && resource.data.type == 'global';
      
      // Public visitor page needs to read the assigned form
      allow read: if request.auth == null;
    }

    match /leads/{leadId} {
        // Admins can manage all leads
        allow read, update, delete: if isAdmin();
        // Users can manage their own leads
        allow read, update, delete: if request.auth.uid == resource.data.userId;
        
        // Public visitor page can create new leads
        allow create: if request.auth == null;
    }
    
    match /feedbackSubmissions/{submissionId} {
        // Admins can read all feedback
        allow read: if isAdmin();
        // Users can read their own feedback
        allow read: if request.auth.uid == resource.data.userId;

        // Public visitor page can create new feedback
        allow create: if request.auth == null;
    }
    
    match /gifts/{giftId} {
        // Admins can read all gifts
        allow read, update, delete: if isAdmin();
        // Users can manage their own gifts
        allow read, create, update, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
